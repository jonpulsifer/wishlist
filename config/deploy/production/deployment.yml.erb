apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: wishlist
    app.kubernetes.io/part-of: wishlist
  name: wishlist
  namespace: wishlist
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wishlist
      app.kubernetes.io/part-of: wishlist
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wishlist
        app.kubernetes.io/part-of: wishlist
    spec:
      automountServiceAccountToken: false
      serviceAccountName: wishlist
      initContainers:
      - name: migration
        image: gcr.io/trusted-builds/wishlist:<%= current_sha %>
        imagePullPolicy: Always
        command:
        - bundle
        - exec
        - rails
        - db:migrate
        env:
        - name: RAILS_MASTER_SECRET
          valueFrom:
            secretKeyRef:
              name: rails-secret
              key: rails-master-secret
        - name: RAILS_ENV
          value: production
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        - name: ENVIRONMENT
          value: production
        ports:
        - containerPort: 3000
      containers:
      - name: wishlist
        image: gcr.io/trusted-builds/wishlist:<%= current_sha %>
        imagePullPolicy: Always
        command:
        - bundle
        - exec
        - rails
        - server
        env:
        - name: RAILS_MASTER_SECRET
          valueFrom:
            secretKeyRef:
              name: rails-secret
              key: rails-master-secret
        - name: RAILS_ENV
          value: production
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        - name: ENVIRONMENT
          value: production
        ports:
        - containerPort: 3000
